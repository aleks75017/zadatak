{"version":3,"sources":["_init.js","directives/altImage.directive.js","directives/pac.confirm.action.js","directives/pac.daterange.js","directives/pac.datetime.js","directives/pac.enter.js","directives/pac.match.passwords.js","event/event.notification.controller.js","event/event.service.js","event/events.js","map/map.config.js","map/map.controller.js","venues/venues.model.js","venues/venues.service.js","venues/venues.venue-modal.controller.js","_config/api.countries.js","_config/api.packator.js","_config/routes.js","_config/stateChangeEvents.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice', [\r\n      'ui.router',\r\n      'ui.bootstrap',\r\n      'ngMap'\r\n    ])\r\n    .constant('config', {})\r\n    .run(setupConfig);\r\n\r\n  function setupConfig($http, config) {\r\n    $http({\r\n      method: 'GET',\r\n      url: 'data/config.json'\r\n    })\r\n    .then(function(res) {\r\n      angular.extend(config, res.data);\r\n    });\r\n  }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .directive('altImage', altImage);\r\n\r\n  function altImage() {\r\n    return {\r\n      link: link,\r\n      restrict: 'A',\r\n    };\r\n\r\n    function link(scope, iElement, iAttrs) {\r\n      iElement.bind('error', function() {\r\n        angular.element(this).attr(\"src\", iAttrs.altImage);\r\n      });\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n  \r\n  angular\r\n    .module('backoffice')\r\n    .directive('pacConfirmAction', pacConfirmAction)\r\n    .controller('ConfirmActionController', ConfirmActionController);\r\n\r\n  pacConfirmAction.$inject = ['$uibModal'];\r\n  function pacConfirmAction($uibModal) {\r\n    return {\r\n      link: link,\r\n      restrict: 'A',\r\n      scope: {\r\n        action: '=pacConfirmAction',\r\n      }\r\n    };\r\n\r\n    function link(scope, element, attrs) {\r\n      element.on('click', function(e) {\r\n        e.preventDefault();\r\n        $uibModal.open({\r\n          templateUrl: 'views/directives/pac.confirm.action.html',\r\n          controller: 'ConfirmActionController',\r\n          controllerAs: 'vm',\r\n          backdrop: 'static',\r\n          resolve: {\r\n            action: function() {\r\n              return scope.action;\r\n            },\r\n          },\r\n        });\r\n     });\r\n    }\r\n  }\r\n\r\n  ConfirmActionController.$inject = ['$scope', 'action'];\r\n  function ConfirmActionController($scope, action) {\r\n    var vm = this;\r\n\r\n    // public methods\r\n    vm.applyAction = applyAction;\r\n    vm.dismissModal = dismissModal;\r\n\r\n    //////////////////////////////\r\n    \r\n    /**\r\n     * Calls referenced action\r\n     */\r\n    function applyAction() {\r\n      action();\r\n      dismissModal();\r\n    }\r\n\r\n    /**\r\n     * Dismisses modal instance\r\n     */\r\n    function dismissModal() {\r\n      $scope.$dismiss();\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('backoffice')\r\n        .directive('pacDaterange', pacDaterange);\r\n\r\n    function pacDaterange() {\r\n        return {\r\n            link: link,\r\n            restrict: 'A'\r\n        };\r\n\r\n        function link(scope, element, attrs) {\r\n\r\n            var drp = angular.element(element.find('input'));\r\n\r\n            // initialize daterangepicker\r\n            drp.daterangepicker({\r\n              opens: 'left',\r\n              format: 'DD/MM/YYYY',\r\n            });\r\n\r\n            // binder for clearing filter values\r\n            element.find('.clearDaterange').on('click', function() {\r\n              clearValues();\r\n              hideClearer();\r\n            });\r\n\r\n            // binder for selecting daterange\r\n            drp.on('apply.daterangepicker', function(ev, picker) {\r\n              showClearer();\r\n              setValues(picker.startDate, picker.endDate);\r\n            });\r\n\r\n            \r\n            function showClearer() {\r\n              element.find('.clearDaterange').removeClass('hide');\r\n            }\r\n\r\n            function hideClearer() {\r\n              element.find('.clearDaterange').addClass('hide');\r\n            }\r\n\r\n            /**\r\n            *   Applies selected values to input field in specific format\r\n            *   @param {Date} start - Selected start date\r\n            *   @param {Date} end - Selected end date\r\n            */\r\n            function setValues(start, end) {\r\n              element.find('input')\r\n                .val(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'))\r\n                .trigger('change'); // must be present in order for daterangepicker to trigger change event\r\n            }\r\n\r\n            // removes all values from input element\r\n            function clearValues() {\r\n              element.find('input')\r\n                .val('')\r\n                .trigger('change'); // must be present in order for daterangepicker to trigger change event\r\n            }\r\n        }\r\n    }\r\n\r\n})();\r\n","(function(moment) {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('backoffice')\r\n        .directive('pacDateTime', pacDateTime);\r\n\r\n    function pacDateTime() {\r\n        // Usage:\r\n        // Put as an attribute in tag whose value is expected to be time in UTC format\r\n        // pac-format parameter can have one of these values\"\r\n        //  1. 'D' - this will return Date in EU format (DD/MM/YYYY)\r\n        //  2. 'T' - this will return Time (HH:mm:ss)\r\n        //  3. 'DT' - this will return DateTime\r\n        // When no pac-format is supplied, defaults to 'D'\r\n        // Creates:\r\n        // Localized date/time/datetime based on environment (OS) localization settings\r\n\r\n        return {\r\n            link: link,\r\n            restrict: 'A',\r\n            scope: {\r\n                pacDateTime: '=',\r\n                pacFormat: '='\r\n            }\r\n        };\r\n\r\n        function link(scope, element, attrs) {\r\n\r\n            scope.$watch('pacDateTime', function dateTimeWatch(newVal, oldVal) {\r\n\r\n                if (!!newVal) {\r\n\r\n                    if (isValidDateString(newVal)) {\r\n\r\n                        var time = moment(newVal);\r\n\r\n                        // set value based on the 'pacFormat' attribute\r\n                        switch (scope.pacFormat) {\r\n\r\n                            case 'DT':\r\n\r\n                                setValue(element, time.format('DD/MM/YYYY HH:mm:ss'));\r\n\r\n                                break;\r\n\r\n                            case 'D':\r\n\r\n                                setValue(element, time.format('DD/MM/YYYY'));\r\n\r\n                                break;\r\n\r\n                            case 'T':\r\n\r\n                                setValue(element, time.format('HH:mm:ss'));\r\n\r\n                                break;\r\n\r\n                            default:\r\n\r\n                                setValue(element, time.format('DD/MM/YYYY'));\r\n                        }\r\n                    }\r\n                    else {\r\n\r\n                        setValue(element, newVal);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        function setValue(element, value) {\r\n\r\n            element.text(value);\r\n            element.val(value);\r\n        }\r\n\r\n        /**\r\n        *   Checks if provided date string is valid date format\r\n        *   @param {string} date - Expected date in string format\r\n        *   @returns {bool} - True if parameter can be parsed as Date, otherwise false\r\n        */\r\n        function isValidDateString(date) {\r\n\r\n            if (!isNaN(Date.parse(date))) {\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n})(moment);\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .directive('pacEnter', pacEnter);\r\n\r\n  function pacEnter() {\r\n    return {\r\n      link: link,\r\n      restrict: 'A',\r\n      scope: {\r\n        pacEnter: '='\r\n      }\r\n    };\r\n  }\r\n\r\n  function link(scope, element, attrs) {\r\n    element.on(\"keydown keypress\", function(event) {\r\n      if(event.which === 13) {\r\n        scope.pacEnter();\r\n        event.preventDefault();\r\n      }\r\n    });\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .directive('pacMatchPasswords', pacMatchPasswords);\r\n\r\n  function pacMatchPasswords() {\r\n    var errorProperty = 'match';\r\n\r\n    return {\r\n      link: link,\r\n      restrict: 'A',\r\n      require: 'ngModel'\r\n    };\r\n\r\n    function link(scope, element, attrs, ctrl) {\r\n      scope.$watch(attrs.ngModel, function() {\r\n        validate();\r\n      });\r\n\r\n      attrs.$observe('pacMatchPasswords', function(val) {\r\n        validate();\r\n      });\r\n\r\n      function validate() {\r\n        if (ctrl.$modelValue === attrs.pacMatchPasswords) {\r\n          ctrl.$setValidity(errorProperty, true);\r\n        }\r\n        else {\r\n          ctrl.$setValidity(errorProperty, false);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .controller('EventNotificationController', EventNotificationController);\r\n\r\n  EventNotificationController.$inject = ['$q', '$timeout', '$rootScope', 'eventService', 'events'];\r\n\r\n  function EventNotificationController($q, $timeout, $rootScope, eventService, events) {\r\n    var vm = this;\r\n\r\n    // public methods\r\n    vm.removeNotification = removeNotification;\r\n\r\n    // variables and properties\r\n    vm.message = {};\r\n\r\n    activate();\r\n\r\n    ////////////////////////////////////////////////\r\n\r\n    function activate() {\r\n\r\n      eventService.subscribe(events.SUCCESS, function (event, message) {\r\n        populateVM(event.name, message)\r\n          .then(removeNotificationDelayed);\r\n      });\r\n\r\n      eventService.subscribe(events.ERROR, function (event, message) {\r\n        populateVM(event.name, message)\r\n          .then(removeNotificationDelayed);\r\n      });\r\n    }\r\n\r\n    ////////////////////////////////////////////////\r\n    \r\n    /**\r\n     * Populates videmodel data with appropriate type and message\r\n     * @param  {string}   type      error/success\r\n     * @param  {string}   message   Message to be shown to User\r\n     * @return {void}\r\n     */\r\n    function populateVM(type, message) {\r\n      return $q.when((function() {\r\n        vm.message.type = type;\r\n        vm.message.contents = message;\r\n      })());\r\n    }\r\n\r\n    /**\r\n     * Resets notification object, thus removing the notification from UI\r\n     * @return {void}\r\n     */\r\n    function removeNotification() {\r\n      vm.message = {};\r\n      $rootScope.notificationActive = false;\r\n    }\r\n\r\n    /**\r\n     * Removes notification after X seconfs\r\n     * @return {void}\r\n     */\r\n    function removeNotificationDelayed() {\r\n      $timeout(removeNotification, events.notificationDisplayTime);\r\n    }\r\n  }\r\n\r\n})();\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .service('eventService', eventService);\r\n\r\n  eventService.$inject = ['$q', '$rootScope', 'events'];\r\n\r\n  function eventService($q, $rootScope, events) {\r\n\r\n    var service = this;\r\n\r\n    service.broadcast = broadcast;\r\n    service.subscribe = subscribe;\r\n    service.unsubscribe = unsubscribe;\r\n    service.notifySuccess = notifySuccess;\r\n    service.notifyError = notifyError;\r\n\r\n    service.events = events;\r\n\r\n    var unsubscribeTriggers = [];\r\n\r\n    function broadcast(event, data) {\r\n\r\n      return $q.when(function() {\r\n        if (!!event) {\r\n          if (event === events.ERROR || event === events.SUCCESS) {\r\n            $rootScope.notificationActive = true;\r\n          }\r\n\r\n          return $rootScope.$broadcast(event, data);\r\n        }\r\n        return false;  \r\n      }());\r\n    }\r\n\r\n    function subscribe(event, callback) {\r\n\r\n      return $q.when(function() {\r\n        var unsubscribeFunction = $rootScope.$on(event, callback);\r\n        unsubscribeTriggers.push(unsubscribeFunction);\r\n        return (unsubscribeTriggers.length - 1);\r\n      }());      \r\n    }\r\n\r\n    function unsubscribe(index) {\r\n\r\n      $q.when(function() {\r\n        try {\r\n          if (!!unsubscribeTriggers[index] && angular.isFunction(unsubscribeTriggers[index])) {\r\n\r\n            unsubscribeTriggers[index]();\r\n            unsubscribeTriggers.splice(index, 1);\r\n          }\r\n          return true;\r\n        } catch(e) {\r\n\r\n          return false;\r\n        }  \r\n      }());\r\n    }\r\n\r\n    /**\r\n     * Broadcasts success event with message\r\n     * @param  {string}   message     Success message\r\n     * @return {void}\r\n     */\r\n    function notifySuccess(message) {\r\n      broadcast(events.SUCCESS, message);\r\n    }\r\n\r\n    /**\r\n     * Broadcasts error event with message\r\n     * @param  {string}   message     Error message\r\n     * @return {void}\r\n     */\r\n    function notifyError(message) {\r\n      broadcast(events.ERROR, message);\r\n    }\r\n  }\r\n}());","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .constant('events', {\r\n      SESSION_EXPIRED: 'SESSION_EXPIRED',\r\n      USER_LOGGED_IN: 'USER_LOGGED_IN',\r\n      USER_LOGGED_OUT: 'USER_LOGGED_OUT',\r\n      ERROR: 'ERROR',\r\n      SUCCESS: 'SUCCESS',\r\n      notificationDisplayTime: 6000,\r\n    });\r\n}());","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('backoffice')\r\n      .constant('mapConfig', {\r\n\r\n          'zoom': 13,\r\n          'maxZoom': 16,\r\n          'center': '44.7866,20.4489',\r\n          'panControl': true,\r\n          'zoomControl': true,\r\n          'scaleControl': true,\r\n          'markers': [],\r\n          'marker': {\r\n            'path': 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',\r\n            'fillColor': '#252830',\r\n            'fillOpacity': 0.8,\r\n            'scale': 0.8,\r\n            'strokeColor': '#252830',\r\n            'strokeWeight': 2\r\n          },\r\n          mapItems: [],\r\n          'style': [{\"elementType\":\"geometry\",\"stylers\":[{\"hue\":\"#ff4400\"},{\"saturation\":-68},{\"lightness\":-4},{\"gamma\":0.72}]},{\"featureType\":\"road\",\"elementType\":\"labels.icon\"},{\"featureType\":\"landscape.man_made\",\"elementType\":\"geometry\",\"stylers\":[{\"hue\":\"#0077ff\"},{\"gamma\":3.1}]},{\"featureType\":\"water\",\"stylers\":[{\"hue\":\"#00ccff\"},{\"gamma\":0.44},{\"saturation\":-33}]},{\"featureType\":\"poi.park\",\"stylers\":[{\"hue\":\"#44ff00\"},{\"saturation\":-23}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"hue\":\"#007fff\"},{\"gamma\":0.77},{\"saturation\":65},{\"lightness\":99}]},{\"featureType\":\"water\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"gamma\":0.11},{\"weight\":5.6},{\"saturation\":99},{\"hue\":\"#0091ff\"},{\"lightness\":-86}]},{\"featureType\":\"transit.line\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":-48},{\"hue\":\"#ff5e00\"},{\"gamma\":1.2},{\"saturation\":-23}]},{\"featureType\":\"transit\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"saturation\":-64},{\"hue\":\"#ff9100\"},{\"lightness\":16},{\"gamma\":0.47},{\"weight\":2.7}]}]\r\n      });\r\n}());","(function() {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('backoffice')\r\n\t\t.controller('MapController', mapController);\r\n\r\n\tmapController.$inject = ['$q', 'venueService', 'NgMap', 'mapConfig', '$uibModal'];\r\n\r\n\tfunction mapController($q, venueService, NgMap, mapConfig, $uibModal) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.mapConfig = mapConfig;\r\n\t\tvm.venues = [];\r\n\t\tvm.panelOpened = false;\r\n\r\n\t\tvm.togglePanel = togglePanel;\r\n\r\n\t\tactivate();\r\n\r\n\t\t///////////////////////////\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t\tloadMap()\r\n\t\t\t\t.then(loadVenues)\r\n\t\t\t\t.then(loadMarkers);\r\n\t\t}\r\n\r\n\t\tfunction togglePanel() {\r\n\r\n\t\t\tvm.panelOpened = !vm.panelOpened;\r\n\t\t}\r\n\r\n\t\tfunction loadVenues(mapx) {\r\n\r\n\t\t\tvar center = vm.mapConfig.center.split(',');\r\n           // debugger;\r\n\t\t\treturn venueService\r\n\t\t\t\t.search(center[0], center[1], 200,mapx)\r\n\t\t\t\t.then(function(venues) {\r\n\t\t\t\t\tvm.venues = venues;\r\n\t\t\t\t\treturn mapx;\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction loadMap() {\r\n\r\n        //debugger;\r\n\t\t\treturn NgMap.getMap()\r\n\t\t\t\t.then(function(map) { return map; })\r\n\t\t\t\t.catch(function(e) { console.log(e); });\r\n\t\t}\r\n\r\n\t\tfunction loadMarkers(map) {\r\n\r\n\t\t\treturn $q.when(function() {\r\n\r\n\t\t\t\tfor (var i in vm.venues) {\r\n\t\t\t\t\tvar mark = buildMarker(vm.venues[i]);\r\n\t\t\t\t\tmark.setMap(map);\r\n\t\t\t\t}\r\n\t\t\t}());\r\n\t\t}\r\n\r\n\t\tfunction buildMarker(venue) {\r\n\r\n\t\t\tvar latlng = new google.maps.LatLng(venue.latitude, venue.longitude);\r\n\r\n\t\t\tvar mark = new google.maps.Marker({\r\n              position: latlng,\r\n              icon: vm.mapConfig.marker\r\n            });\r\n\r\n\t\t\tmark.addListener('click', function() {\r\n              showVenueInfo(venue);\r\n            });\r\n\r\n            return mark;\r\n\t\t}\r\n\r\n\t\tfunction showVenueInfo(venue) {\r\n\r\n\t\t\t$uibModal.open({\r\n\t\t\t\tanimation: true,\r\n                templateUrl: 'views/venues/venues.venue-modal.html',\r\n                controller: 'VenueModalController as vm',\r\n                resolve: {\r\n                    options: function() {\r\n                    \treturn {\r\n                    \t\tvenue: venue\r\n                    \t}\r\n                    }\r\n                }\r\n\t\t\t});\r\n        }\r\n\t}\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('backoffice')\r\n\t\t.factory('Venue', venueFactory);\r\n\r\n\tvenueFactory.$inject = [];\r\n\r\n\tfunction venueFactory() {\r\n\r\n\t\treturn Venue;\r\n\t}\r\n\r\n\tfunction Venue(data) {\r\n\r\n\t\tthis.name = data && data.name ? data.name : '';\r\n\t\tthis.address = data && data.address ? data.address : '';\r\n\t\tthis.logo = data && data.logo ? data.logo : '';\r\n\t\tthis.latitude = data && data.latitude ? data.latitude : 0;\r\n\t\tthis.longitude = data && data.longitude ? data.longitude : 0;\r\n\t\tthis.type = data && data.type ? data.type : '';\r\n\t}\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('backoffice')\r\n\t\t.service('venueService', venueService);\r\n\r\n\tvenueService.$inject = ['$http', 'Venue'];\r\n\r\n\tfunction venueService($http, Venue) {\r\n\r\n\t\tvar service = this;\r\n\r\n\t\tservice.search = search;\r\n\r\n\t\t/////////////////////////////////////\r\n\r\n\t\tfunction search(latitude, longitude, radius,mapy) {\r\n\r\n            var svc = new google.maps.places.PlacesService(mapy);\r\n            var pyrmont = new google.maps.LatLng(latitude,longitude);\r\n            console.log(svc);\r\n            var request = {\r\n                location: pyrmont,\r\n                radius: 1000,\r\n                types: [\"restaurant\", \"food\", \"bar\",\"cafe\"]\r\n            };\r\n            var deferred = $.Deferred();\r\n\r\n\r\n\r\n                function callback(results, status) {\r\n\r\n                    if (status == google.maps.places.PlacesServiceStatus.OK) {\r\n                        var rs = new Array();\r\n                        for (var i = 0; i < results.length; i++) {\r\n                            var place = results[i];\r\n\r\n                            rs.push({\"name\": place.name,\r\n                                \"address\": place.vicinity,\r\n                                \"logo\": place.icon,\r\n                                \"latitude\": place.geometry.location.lat(),\r\n                                \"longitude\": place.geometry.location.lng(),\r\n                                \"type\": place.types[0]});\r\n\r\n                        }\r\n                        deferred.resolve(rs);\r\n\r\n                    }\r\n                }\r\n\r\n                svc.nearbySearch(request, callback);\r\n            return deferred.promise();\r\n\t\t\t// TODO: search venues by radius from specific geolocation\r\n\t\t\t// NOW: return all venues (this is DEMO app)\r\n\r\n\t\t}\r\n\t}\r\n})();","(function() {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('backoffice')\r\n\t\t.controller('VenueModalController', venueModalController);\r\n\r\n\tvenueModalController.$inject = ['$uibModalInstance', 'options'];\r\n\r\n\tfunction venueModalController($uibModalInstance, options) {\r\n\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.venue = options.venue;\r\n\r\n\t\tvm.close = close;\r\n\r\n\t\t////////////////////////////////////////\r\n\r\n\t\tfunction close() {\r\n\r\n\t\t\tif (options.onClose) {\r\n\t\t\t\toptions.onClose(vm.venue);\r\n\t\t\t}\r\n\t\t\t$uibModalInstance.dismiss();\r\n\t\t}\r\n\t}\r\n})();","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .service('countriesAPI', countriesAPI);\r\n\r\n  countriesAPI.$inject = ['$q', '$http', 'config'];\r\n  function countriesAPI($q, $http, config) {\r\n    var service = this;\r\n\r\n    // public methods\r\n    service.getCountries = getCountries;\r\n\r\n    // variables and properties\r\n    var _allCountries;\r\n\r\n    /////////////////////////////////\r\n\r\n    function getCountries() {\r\n      // serve from memory\r\n      if (!!_allCountries && !!_allCountries.length) {\r\n        return $q.when(function() {\r\n          return _allCountries;\r\n        }());\r\n      }\r\n\r\n      // call API, save results in memory\r\n      return $http({\r\n        method: config.httpMethods.GET,\r\n        url: config.COUNTRIES,\r\n      })\r\n      .then(function(response) {\r\n        _allCountries = response.data;\r\n        return _allCountries;\r\n      });\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .service('packatorAPI', packatorApiProxy);\r\n\r\n  packatorApiProxy.$inject = ['$http', 'config', '$rootScope'];\r\n  function packatorApiProxy($http, config, $rootScope) {\r\n    var service = this;\r\n\r\n    // public methods\r\n    service.http = submitRequest;\r\n\r\n    /////////////////////////////////\r\n\r\n    function submitRequest(request) {\r\n      request.url = config.HOST + ensureSingleSlash(request.url);\r\n\r\n      if (!request.params) {\r\n        request.params = {};\r\n      }\r\n\r\n      if ($rootScope.user) {\r\n        request.params.access_token = $rootScope.user.access_token;\r\n      }\r\n      \r\n      return $http(request)\r\n        .then(function(response) {\r\n          return response.data;\r\n        });\r\n    }\r\n\r\n    function ensureSingleSlash(str) {\r\n      return  str.replace(/\\/\\//g, '/');\r\n    }\r\n  }\r\n\r\n}());\r\n","(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('backoffice')\r\n    .config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n      $stateProvider\r\n        .state('app', {\r\n          abstract: true,\r\n          url: '/',\r\n          templateUrl: 'views/layout/layout.html'\r\n        })\r\n        .state('app.map', {\r\n          url: 'map',\r\n          templateUrl: 'views/map/map.html'\r\n        });\r\n\r\n      $urlRouterProvider.otherwise('/map');\r\n\r\n  });\r\n\r\n})();\r\n","(function () {\r\n  'use strict';\r\n  \r\n  angular\r\n    .module('backoffice')\r\n    .run(stateChangeEvents);\r\n\r\n  stateChangeEvents.$inject = ['$window', '$rootScope', '$state'];\r\n  function stateChangeEvents($window, $rootScope, $state, authService) {\r\n\r\n    /*function onStateChangeStart(event, toState, toParams, fromState) {\r\n      if (!authService.isUserLoggedIn() && toState.name !== 'login') {\r\n        event.preventDefault();\r\n        $state.go('login');\r\n      }\r\n\r\n      if (authService.isUserLoggedIn() && (toState.name === 'app' || toState.name === 'login')) {\r\n        event.preventDefault();\r\n        $state.go('app.orders');\r\n      }\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeStart', onStateChangeStart);*/\r\n  }\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}